# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..til import orchestrator_msg_pb2 as til_dot_orchestrator__msg__pb2


class SchedulerCommunicatorStub(object):
    """-----------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Schedule = channel.unary_unary(
                '/til.SchedulerCommunicator/Schedule',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.GetScheduledConfigs = channel.unary_unary(
                '/til.SchedulerCommunicator/GetScheduledConfigs',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.IsScheduled = channel.unary_unary(
                '/til.SchedulerCommunicator/IsScheduled',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.RestartSchedulerLoop = channel.unary_unary(
                '/til.SchedulerCommunicator/RestartSchedulerLoop',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.SetScheduleStatus = channel.unary_unary(
                '/til.SchedulerCommunicator/SetScheduleStatus',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.GetScheduleStatus = channel.unary_unary(
                '/til.SchedulerCommunicator/GetScheduleStatus',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.DeleteScheduledConfig = channel.unary_unary(
                '/til.SchedulerCommunicator/DeleteScheduledConfig',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )
        self.Cleanup = channel.unary_unary(
                '/til.SchedulerCommunicator/Cleanup',
                request_serializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
                )


class SchedulerCommunicatorServicer(object):
    """-----------

    """

    def Schedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduledConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsScheduled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestartSchedulerLoop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetScheduleStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduleStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteScheduledConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cleanup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerCommunicatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.Schedule,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'GetScheduledConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduledConfigs,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'IsScheduled': grpc.unary_unary_rpc_method_handler(
                    servicer.IsScheduled,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'RestartSchedulerLoop': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartSchedulerLoop,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'SetScheduleStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetScheduleStatus,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'GetScheduleStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduleStatus,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'DeleteScheduledConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteScheduledConfig,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
            'Cleanup': grpc.unary_unary_rpc_method_handler(
                    servicer.Cleanup,
                    request_deserializer=til_dot_orchestrator__msg__pb2.ScheduleRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.ScheduleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'til.SchedulerCommunicator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerCommunicator(object):
    """-----------

    """

    @staticmethod
    def Schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/Schedule',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduledConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/GetScheduledConfigs',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsScheduled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/IsScheduled',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestartSchedulerLoop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/RestartSchedulerLoop',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetScheduleStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/SetScheduleStatus',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduleStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/GetScheduleStatus',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteScheduledConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/DeleteScheduledConfig',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Cleanup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.SchedulerCommunicator/Cleanup',
            til_dot_orchestrator__msg__pb2.ScheduleRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.ScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NOSUpdaterCommunicatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUpdateConfigs = channel.unary_unary(
                '/til.NOSUpdaterCommunicator/GetUpdateConfigs',
                request_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
                )
        self.GetUpdateStatus = channel.unary_unary(
                '/til.NOSUpdaterCommunicator/GetUpdateStatus',
                request_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
                )
        self.SetUpdateStatus = channel.unary_unary(
                '/til.NOSUpdaterCommunicator/SetUpdateStatus',
                request_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/til.NOSUpdaterCommunicator/Update',
                request_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
                )
        self.Cleanup = channel.unary_unary(
                '/til.NOSUpdaterCommunicator/Cleanup',
                request_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
                )


class NOSUpdaterCommunicatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUpdateConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUpdateStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUpdateStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cleanup(self, request, context):
        """rpc Delete
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NOSUpdaterCommunicatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUpdateConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUpdateConfigs,
                    request_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.SerializeToString,
            ),
            'GetUpdateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUpdateStatus,
                    request_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.SerializeToString,
            ),
            'SetUpdateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUpdateStatus,
                    request_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.SerializeToString,
            ),
            'Cleanup': grpc.unary_unary_rpc_method_handler(
                    servicer.Cleanup,
                    request_deserializer=til_dot_orchestrator__msg__pb2.NOSUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.NOSUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'til.NOSUpdaterCommunicator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NOSUpdaterCommunicator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUpdateConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.NOSUpdaterCommunicator/GetUpdateConfigs',
            til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUpdateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.NOSUpdaterCommunicator/GetUpdateStatus',
            til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUpdateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.NOSUpdaterCommunicator/SetUpdateStatus',
            til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.NOSUpdaterCommunicator/Update',
            til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Cleanup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.NOSUpdaterCommunicator/Cleanup',
            til_dot_orchestrator__msg__pb2.NOSUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.NOSUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class INUpdaterCommunicatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUpdateConfigs = channel.unary_unary(
                '/til.INUpdaterCommunicator/GetUpdateConfigs',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )
        self.GetUpdateStatus = channel.unary_unary(
                '/til.INUpdaterCommunicator/GetUpdateStatus',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )
        self.SetUpdateStatus = channel.unary_unary(
                '/til.INUpdaterCommunicator/SetUpdateStatus',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )
        self.SetDevInitModeForAccelerator = channel.unary_unary(
                '/til.INUpdaterCommunicator/SetDevInitModeForAccelerator',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )
        self.GetDevInitModeForAccelerator = channel.unary_unary(
                '/til.INUpdaterCommunicator/GetDevInitModeForAccelerator',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/til.INUpdaterCommunicator/Update',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )
        self.Cleanup = channel.unary_unary(
                '/til.INUpdaterCommunicator/Cleanup',
                request_serializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
                )


class INUpdaterCommunicatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUpdateConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUpdateStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUpdateStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDevInitModeForAccelerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevInitModeForAccelerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cleanup(self, request, context):
        """rpc Delete
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_INUpdaterCommunicatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUpdateConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUpdateConfigs,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
            'GetUpdateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUpdateStatus,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
            'SetUpdateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUpdateStatus,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
            'SetDevInitModeForAccelerator': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDevInitModeForAccelerator,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
            'GetDevInitModeForAccelerator': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevInitModeForAccelerator,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
            'Cleanup': grpc.unary_unary_rpc_method_handler(
                    servicer.Cleanup,
                    request_deserializer=til_dot_orchestrator__msg__pb2.INUpdateRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.INUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'til.INUpdaterCommunicator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class INUpdaterCommunicator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUpdateConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/GetUpdateConfigs',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUpdateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/GetUpdateStatus',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUpdateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/SetUpdateStatus',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDevInitModeForAccelerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/SetDevInitModeForAccelerator',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevInitModeForAccelerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/GetDevInitModeForAccelerator',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/Update',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Cleanup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.INUpdaterCommunicator/Cleanup',
            til_dot_orchestrator__msg__pb2.INUpdateRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.INUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TIFUpdateCommunicatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTIFCode = channel.unary_unary(
                '/til.TIFUpdateCommunicator/GetTIFCode',
                request_serializer=til_dot_orchestrator__msg__pb2.TIFRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.TIFResponse.FromString,
                )
        self.UpdateTIFCode = channel.unary_unary(
                '/til.TIFUpdateCommunicator/UpdateTIFCode',
                request_serializer=til_dot_orchestrator__msg__pb2.TIFRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.TIFResponse.FromString,
                )
        self.InitializeHardware = channel.unary_unary(
                '/til.TIFUpdateCommunicator/InitializeHardware',
                request_serializer=til_dot_orchestrator__msg__pb2.TIFRequest.SerializeToString,
                response_deserializer=til_dot_orchestrator__msg__pb2.TIFResponse.FromString,
                )


class TIFUpdateCommunicatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTIFCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTIFCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitializeHardware(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TIFUpdateCommunicatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTIFCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTIFCode,
                    request_deserializer=til_dot_orchestrator__msg__pb2.TIFRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.TIFResponse.SerializeToString,
            ),
            'UpdateTIFCode': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTIFCode,
                    request_deserializer=til_dot_orchestrator__msg__pb2.TIFRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.TIFResponse.SerializeToString,
            ),
            'InitializeHardware': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeHardware,
                    request_deserializer=til_dot_orchestrator__msg__pb2.TIFRequest.FromString,
                    response_serializer=til_dot_orchestrator__msg__pb2.TIFResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'til.TIFUpdateCommunicator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TIFUpdateCommunicator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTIFCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.TIFUpdateCommunicator/GetTIFCode',
            til_dot_orchestrator__msg__pb2.TIFRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.TIFResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTIFCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.TIFUpdateCommunicator/UpdateTIFCode',
            til_dot_orchestrator__msg__pb2.TIFRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.TIFResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitializeHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/til.TIFUpdateCommunicator/InitializeHardware',
            til_dot_orchestrator__msg__pb2.TIFRequest.SerializeToString,
            til_dot_orchestrator__msg__pb2.TIFResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
